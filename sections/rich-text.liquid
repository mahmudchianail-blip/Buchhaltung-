{{ 'section-rich-text.css' | asset_url | stylesheet_tag }}

{%- assign cosmic_enabled = section.settings.enable_cosmic_theme -%}
{%- assign cosmic_brand_name = section.settings.cosmic_brand_name | default: 'Optispar' -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  {% if cosmic_enabled %}
    .cosmic-visually-hidden {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }

    .cosmic-rich-text {
      position: relative;
      overflow: hidden;
      color: #f8f7ff;
      background: radial-gradient(120% 120% at 50% 0%, rgba(145, 94, 255, 0.35) 0%, rgba(28, 11, 53, 0.85) 38%, #0a0315 72%);
      border-radius: clamp(20px, 5vw, 48px);
      box-shadow: 0 40px 80px rgba(22, 6, 39, 0.45);
    }

    .cosmic-rich-text .rich-text__wrapper {
      min-height: min(78vh, 760px);
      display: flex;
      align-items: center;
      justify-content: center;
      padding: clamp(2.5rem, 8vw, 6rem) clamp(1.5rem, 6vw, 4.5rem);
      position: relative;
      z-index: 2;
    }

    .cosmic-rich-text .rich-text__blocks {
      width: 100%;
      max-width: 720px;
      margin-inline: auto;
      text-align: center;
      display: grid;
      gap: clamp(1rem, 3vw, 1.75rem);
    }

    .cosmic-stars-canvas {
      position: absolute;
      inset: 0;
      z-index: 1;
      pointer-events: none;
    }

    .cosmic-stars-canvas canvas {
      width: 100% !important;
      height: 100% !important;
      display: block;
    }

    .cosmic-content {
      opacity: 0;
      transform: translateY(18px) scale(0.98);
      transition: opacity 0.6s cubic-bezier(0.23, 1, 0.32, 1), transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
    }

    .cosmic-content--visible {
      opacity: 1;
      transform: translateY(0) scale(1);
    }

    .cosmic-loader {
      position: absolute;
      inset: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      background: #0a0315;
      z-index: 3;
      pointer-events: none;
    }

    .cosmic-loader__word {
      display: flex;
      gap: clamp(0.1em, 1vw, 0.25em);
      font-weight: 800;
      font-size: clamp(2.5rem, 10vw, 6rem);
      letter-spacing: 0.05em;
      background: linear-gradient(90deg, #f0abfc 0%, #a855f7 30%, #fb7185 60%, #f59e0b 100%);
      -webkit-background-clip: text;
      color: transparent;
      animation: cosmic-subtle-glow 2.8s ease-in-out calc(var(--cosmic-letter-count) * 0.15s) infinite;
    }

    .cosmic-loader__letter {
      opacity: 0;
      filter: blur(10px) brightness(2);
      animation: cosmic-form-from-stardust 1.05s cubic-bezier(0.16, 1, 0.3, 1) forwards;
      animation-delay: calc(var(--cosmic-letter-index) * 0.15s);
      will-change: transform, opacity, filter;
    }

    @keyframes cosmic-form-from-stardust {
      0% {
        opacity: 0;
        transform: scale(1.3) translateY(-18px);
        filter: blur(10px) brightness(2);
      }
      50% {
        opacity: 0.82;
        filter: blur(2px) brightness(1.4);
      }
      100% {
        opacity: 1;
        transform: scale(1) translateY(0);
        filter: blur(0) brightness(1);
      }
    }

    @keyframes cosmic-subtle-glow {
      0%,
      100% {
        text-shadow: 0 0 8px rgba(255, 255, 255, 0.2), 0 0 20px rgba(192, 132, 252, 0.3);
      }
      50% {
        text-shadow: 0 0 12px rgba(255, 255, 255, 0.3), 0 0 30px rgba(192, 132, 252, 0.5);
      }
    }

    .cosmic-loader--fade {
      animation: cosmic-fade-out 0.55s ease forwards;
    }

    @keyframes cosmic-fade-out {
      from {
        opacity: 1;
      }
      to {
        opacity: 0;
      }
    }

    .cosmic-heading {
      font-weight: 800;
      background: linear-gradient(90deg, rgba(240, 171, 252, 1) 0%, rgba(168, 85, 247, 1) 45%, rgba(251, 113, 133, 1) 75%, rgba(245, 158, 11, 1) 100%);
      -webkit-background-clip: text;
      color: transparent;
      text-shadow: 0 0 25px rgba(228, 95, 188, 0.55);
    }

    .cosmic-caption {
      text-transform: uppercase;
      letter-spacing: 0.4em;
      color: rgba(244, 239, 255, 0.75);
    }

    .cosmic-paragraph {
      color: rgba(233, 228, 255, 0.85);
      font-size: clamp(1rem, 2.4vw, 1.25rem);
      line-height: 1.75;
      text-shadow: 0 0 20px rgba(102, 60, 170, 0.45);
    }

    .cosmic-button.button {
      position: relative;
      overflow: hidden;
      border: 0;
      border-radius: 999px;
      padding: 0.95rem 3.25rem;
      font-weight: 600;
      background-image: linear-gradient(90deg, #8b5cf6 0%, #ec4899 50%, #f97316 100%);
      background-size: 200% auto;
      box-shadow: 0 25px 45px rgba(149, 94, 255, 0.35);
      transition: transform 0.45s ease, background-position 0.45s ease, box-shadow 0.45s ease;
    }

    .cosmic-button.button:hover,
    .cosmic-button.button:focus-visible {
      background-position: 100% 0;
      transform: translateY(-4px) scale(1.03);
      box-shadow: 0 35px 65px rgba(149, 94, 255, 0.45);
    }

    .cosmic-button.button--secondary {
      background-image: linear-gradient(90deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.35) 100%);
      color: #f7f5ff;
      box-shadow: 0 20px 45px rgba(149, 94, 255, 0.2);
      backdrop-filter: blur(8px);
    }

    .cosmic-button.button--secondary:hover,
    .cosmic-button.button--secondary:focus-visible {
      background-position: 100% 0;
      color: #fff;
    }
  {% endif %}
{%- endstyle -%}

<div class="isolate{% unless section.settings.full_width %} page-width{% endunless %}">
  <div
    class="rich-text content-container color-{{ section.settings.color_scheme }} gradient{% if section.settings.full_width %} rich-text--full-width content-container--full-width{% endif %} section-{{ section.id }}-padding{% if cosmic_enabled %} cosmic-rich-text{% endif %}"
    data-rich-text-section="{{ section.id }}"
  >
    {% if cosmic_enabled %}
      <div class="cosmic-stars-canvas" aria-hidden="true"></div>
      <div
        class="cosmic-loader"
        role="status"
        aria-live="polite"
        aria-label="{{ 'Lade ' | append: cosmic_brand_name }}"
        data-duration="{{ section.settings.cosmic_loader_duration | default: 3 | times: 1000 | round: 0 }}"
      >
        <div class="cosmic-loader__word" style="--cosmic-letter-count: {{ cosmic_brand_name | size }}" aria-hidden="true">
          {%- assign cosmic_letters = cosmic_brand_name | strip | split: '' -%}
          {%- for letter in cosmic_letters -%}
            <span class="cosmic-loader__letter" style="--cosmic-letter-index: {{ forloop.index0 }}">
              {%- if letter == ' ' -%}&nbsp;{%- else -%}{{ letter }}{%- endif -%}
            </span>
          {%- endfor -%}
        </div>
        <span class="cosmic-visually-hidden">{{ cosmic_brand_name }}</span>
      </div>
      <div class="cosmic-content">
    {% endif %}
    <div class="rich-text__wrapper rich-text__wrapper--{{ section.settings.desktop_content_position }}{% if section.settings.full_width %} page-width{% endif %}">
      <div class="rich-text__blocks {{ section.settings.content_alignment }}">
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'heading' -%}
              <h2
                class="rich-text__heading rte inline-richtext {{ block.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{% if cosmic_enabled %} cosmic-heading{% endif %}"
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
              >
                {{ block.settings.heading }}
              </h2>
            {%- when 'caption' -%}
              <p
                class="rich-text__caption {{ block.settings.text_style }} {{ block.settings.text_style }}--{{ block.settings.text_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{% if cosmic_enabled %} cosmic-caption{% endif %}"
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
              >
                {{ block.settings.caption | escape }}
              </p>
            {%- when 'text' -%}
              <div
                class="rich-text__text rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{% if cosmic_enabled %} cosmic-paragraph{% endif %}"
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
              >
                {{ block.settings.text }}
              </div>
            {%- when 'button' -%}
              <div
                class="rich-text__buttons{% if block.settings.button_label != blank and block.settings.button_label_2 != blank %} rich-text__buttons--multiple{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
              >
                {%- if block.settings.button_label != blank -%}
                  <a
                    {% if block.settings.button_link == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.button_link }}"
                    {% endif %}
                    class="button{% if block.settings.button_style_secondary %} button--secondary{% else %} button--primary{% endif %}{% if cosmic_enabled %} cosmic-button{% endif %}"
                  >
                    {{- block.settings.button_label | escape -}}
                  </a>
                {%- endif -%}
                {%- if block.settings.button_label_2 != blank -%}
                  <a
                    {% if block.settings.button_link_2 == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.button_link_2 }}"
                    {% endif %}
                    class="button{% if block.settings.button_style_secondary_2 %} button--secondary{% else %} button--primary{% endif %}{% if cosmic_enabled %} cosmic-button{% endif %}"
                  >
                    {{- block.settings.button_label_2 | escape -}}
                  </a>
                {%- endif -%}
              </div>
          {%- endcase -%}
        {%- endfor -%}
      </div>
    </div>
    {% if cosmic_enabled %}
      </div>
    {% endif %}
  </div>
</div>

{% if cosmic_enabled %}
  <script>
    (function () {
      const sectionId = {{ section.id | json }};
      let starsCleanup;
      let loaderTimeout;
      let removeLoaderTimeout;

      function cleanup() {
        if (typeof starsCleanup === 'function') {
          starsCleanup();
          starsCleanup = undefined;
        }
        if (loaderTimeout) {
          clearTimeout(loaderTimeout);
          loaderTimeout = undefined;
        }
        if (removeLoaderTimeout) {
          clearTimeout(removeLoaderTimeout);
          removeLoaderTimeout = undefined;
        }
      }

      function loadThree(callback) {
        if (typeof window.THREE !== 'undefined') {
          callback();
          return;
        }

        if (!window.__cosmicThreePromise) {
          window.__cosmicThreePromise = new Promise(function (resolve, reject) {
            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/three@0.166.1/build/three.min.js';
            script.async = true;
            script.onload = resolve;
            script.onerror = reject;
            document.head.appendChild(script);
          });
        }

        window.__cosmicThreePromise
          .then(function () {
            if (typeof window.THREE !== 'undefined') {
              callback();
            }
          })
          .catch(function () {
            // Swallow loading errors silently to avoid breaking the page.
          });
      }

      function createStars(sectionEl) {
        const container = sectionEl.querySelector('.cosmic-stars-canvas');
        if (!container || typeof window.THREE === 'undefined') {
          return undefined;
        }

        const THREE_NS = window.THREE;
        const scene = new THREE_NS.Scene();
        const renderer = new THREE_NS.WebGLRenderer({ antialias: true, alpha: true });
        renderer.setPixelRatio(Math.min(window.devicePixelRatio || 1, 2));
        renderer.setClearColor(0x000000, 0);
        container.appendChild(renderer.domElement);

        const camera = new THREE_NS.PerspectiveCamera(75, 1, 0.1, 1000);
        camera.position.z = 1;

        const starCount = 2500;
        const positions = new Float32Array(starCount * 3);
        for (let i = 0; i < starCount; i += 1) {
          positions[i * 3] = (Math.random() - 0.5) * 2000;
          positions[i * 3 + 1] = (Math.random() - 0.5) * 2000;
          positions[i * 3 + 2] = (Math.random() - 0.5) * 2000;
        }

        const geometry = new THREE_NS.BufferGeometry();
        geometry.setAttribute('position', new THREE_NS.BufferAttribute(positions, 3));

        const material = new THREE_NS.PointsMaterial({
          color: 0x915eff,
          size: 1.4,
          transparent: true,
          opacity: 0.82,
          blending: THREE_NS.AdditiveBlending,
        });

        const stars = new THREE_NS.Points(geometry, material);
        scene.add(stars);

        function resizeRenderer() {
          const rect = sectionEl.getBoundingClientRect();
          const width = Math.max(rect.width, 1);
          const height = Math.max(rect.height, 1);
          renderer.setSize(width, height, false);
          camera.aspect = width / height;
          camera.updateProjectionMatrix();
        }

        resizeRenderer();

        let animationFrameId;
        function animate() {
          animationFrameId = requestAnimationFrame(animate);
          stars.rotation.x += 0.00025;
          stars.rotation.y += 0.0002;
          renderer.render(scene, camera);
        }

        animate();
        window.addEventListener('resize', resizeRenderer);

        return function () {
          if (animationFrameId) {
            cancelAnimationFrame(animationFrameId);
          }
          window.removeEventListener('resize', resizeRenderer);
          geometry.dispose();
          material.dispose();
          renderer.dispose();
          if (renderer.domElement && renderer.domElement.parentNode) {
            renderer.domElement.parentNode.removeChild(renderer.domElement);
          }
        };
      }

      function revealContent(sectionEl) {
        const content = sectionEl.querySelector('.cosmic-content');
        const loader = sectionEl.querySelector('.cosmic-loader');

        if (!content) {
          return;
        }

        content.classList.add('cosmic-content--visible');
        if (loader) {
          loader.classList.add('cosmic-loader--fade');
          removeLoaderTimeout = window.setTimeout(function () {
            if (loader.parentNode) {
              loader.parentNode.removeChild(loader);
            }
          }, 600);
        }
      }

      function initSection(sectionEl) {
        if (!sectionEl) {
          return;
        }

        cleanup();

        const loader = sectionEl.querySelector('.cosmic-loader');
        const content = sectionEl.querySelector('.cosmic-content');

        if (content) {
          content.classList.remove('cosmic-content--visible');
        }
        if (loader) {
          loader.classList.remove('cosmic-loader--fade');
        }

        if (loader && content) {
          const duration = parseInt(loader.getAttribute('data-duration') || '0', 10);
          loaderTimeout = window.setTimeout(function () {
            revealContent(sectionEl);
          }, isNaN(duration) ? 0 : duration);
        } else if (content) {
          revealContent(sectionEl);
        }

        loadThree(function () {
          starsCleanup = createStars(sectionEl);
        });
      }

      function mount() {
        const sectionEl = document.querySelector('[data-rich-text-section="' + sectionId + '"]');
        initSection(sectionEl);
      }

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', mount);
      } else {
        mount();
      }

      document.addEventListener('shopify:section:load', function (event) {
        if (event && event.detail && event.detail.sectionId === sectionId) {
          const sectionEl = event.target.querySelector('[data-rich-text-section="' + sectionId + '"]') || document.querySelector('[data-rich-text-section="' + sectionId + '"]');
          initSection(sectionEl);
        }
      });

      document.addEventListener('shopify:section:unload', function (event) {
        if (event && event.detail && event.detail.sectionId === sectionId) {
          cleanup();
        }
      });
    })();
  </script>
{% endif %}

{% schema %}
{
  "name": "t:sections.rich-text.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.rich-text.settings.desktop_content_position.label"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.content_alignment.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.rich-text.settings.content_alignment.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.rich-text.settings.full_width.label"
    },
    {
      "type": "header",
      "content": "Kosmisches Erlebnis"
    },
    {
      "type": "checkbox",
      "id": "enable_cosmic_theme",
      "default": false,
      "label": "Kosmisches Layout aktivieren"
    },
    {
      "type": "text",
      "id": "cosmic_brand_name",
      "default": "Optispar",
      "label": "Markenname für Loader"
    },
    {
      "type": "range",
      "id": "cosmic_loader_duration",
      "min": 1,
      "max": 10,
      "step": 0.5,
      "unit": "s",
      "default": 3,
      "label": "Loader-Dauer"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.rich-text.blocks.heading.name",
      "limit": 3,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "t:sections.rich-text.blocks.heading.settings.heading.default",
          "label": "t:sections.rich-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            },
            {
              "value": "hxl",
              "label": "t:sections.all.heading_size.options__4.label"
            },
            {
              "value": "hxxl",
              "label": "t:sections.all.heading_size.options__5.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "caption",
      "name": "t:sections.rich-text.blocks.caption.name",
      "limit": 3,
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "default": "t:sections.rich-text.blocks.caption.settings.text.default",
          "label": "t:sections.rich-text.blocks.caption.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "subtitle",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__1.label"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__2.label"
            }
          ],
          "default": "caption-with-letter-spacing",
          "label": "t:sections.rich-text.blocks.caption.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "small",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__1.label"
            },
            {
              "value": "medium",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__2.label"
            },
            {
              "value": "large",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__3.label"
            }
          ],
          "default": "medium",
          "label": "t:sections.rich-text.blocks.caption.settings.caption_size.label"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.rich-text.blocks.text.name",
      "limit": 3,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.rich-text.blocks.text.settings.text.default",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.rich-text.blocks.buttons.name",
      "limit": 2,
      "settings": [
        {
         "type": "header",
         "content": "t:sections.rich-text.blocks.buttons.settings.header_button1.content"
        },        
        {
          "type": "text",
          "id": "button_label",
          "default": "t:sections.rich-text.blocks.buttons.settings.button_label_1.default",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_1.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_1.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_1.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_1.label"
        },
        {
         "type": "header",
         "content": "t:sections.rich-text.blocks.buttons.settings.header_button2.content"
        },          
        {
          "type": "text",
          "id": "button_label_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_2.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_2.info"
        },
        {
          "type": "url",
          "id": "button_link_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_2.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_2",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_2.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.rich-text.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}
