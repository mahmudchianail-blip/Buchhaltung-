<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Optispar E-Commerce Seite</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      /* --- New Loader Animations --- */
      @keyframes form-from-stardust {
        0% {
          opacity: 0;
          transform: scale(1.5) translateY(-20px);
          filter: blur(10px) brightness(2);
        }
        50% {
          opacity: 0.8;
          filter: blur(2px) brightness(1.5);
        }
        100% {
          opacity: 1;
          transform: scale(1) translateY(0);
          filter: blur(0) brightness(1);
        }
      }

      @keyframes subtle-glow {
        0%, 100% {
          text-shadow: 0 0 8px rgba(255, 255, 255, 0.2), 0 0 20px rgba(192, 132, 252, 0.3);
        }
        50% {
          text-shadow: 0 0 12px rgba(255, 255, 255, 0.3), 0 0 30px rgba(192, 132, 252, 0.5);
        }
      }

      @keyframes fade-out {
        from { opacity: 1; }
        to { opacity: 0; }
      }

      /* --- Hero Text Reveal Animation --- */
      @keyframes fade-in-up-scale {
        0% {
          opacity: 0;
          transform: translateY(20px) scale(0.9);
        }
        100% {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }
      
      /* --- New "Settle" Animation for Brand Name --- */
      @keyframes settle-in-place {
        0% {
          opacity: 0;
          transform: translateY(-30px) scale(1.15);
          filter: blur(8px);
        }
        100% {
          opacity: 1;
          transform: translateY(0) scale(1);
          filter: blur(0);
        }
      }

      .animate-fade-in-up-scale {
        animation: fade-in-up-scale 0.6s cubic-bezier(0.23, 1, 0.32, 1) forwards;
      }


      /* Custom Animations for Header Icons */
      @keyframes jiggle {
        0%, 100% { transform: translateY(0) rotate(0); }
        50% { transform: translateY(-1px) rotate(-2deg); }
      }
      @keyframes wheel-roll {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      @keyframes search-tilt {
        0%, 100% { transform: rotate(0); }
        50% { transform: rotate(-15deg); }
      }
      @keyframes user-bob {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-1.5px); }
      }

      .group:hover .cart-body {
        animation: jiggle 0.4s ease-in-out;
      }
      .group:hover .cart-wheel {
        transform-origin: center; 
        animation: wheel-roll 0.6s ease-out;
      }
      .group:hover .search-icon-shape {
        transform-origin: center;
        animation: search-tilt 0.4s ease-in-out;
      }
      .group:hover .user-head {
        animation: user-bob 0.4s ease-in-out;
      }
      
      /* A smoother, more fluid transition for the navigation indicator */
      .transition-springy {
        transition-property: all;
        transition-duration: 300ms;
        transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
      }
      
      /* Typing cursor animation */
      @keyframes blink {
        50% {
          opacity: 0;
        }
      }
      .cursor-blink {
        animation: blink 1s step-start infinite;
      }
    </style>
  <script type="importmap">
{
  "imports": {
    "react-dom/client": "https://aistudiocdn.com/react-dom@^19.2.0/client",
    "react": "https://aistudiocdn.com/react@^19.2.0",
    "three": "https://aistudiocdn.com/three@^0.166.1",
    "react-dom/": "https://aistudiocdn.com/react-dom@^19.2.0/",
    "react/": "https://aistudiocdn.com/react@^19.2.0/"
  }
}
</script>
</head>
  <body>
    <div id="root"></div>
    <script type="module">
      import React from 'react';
      import ReactDOM from 'react-dom/client';
      import * as THREE from 'three';

      const { useState, useEffect, useRef } = React;

      // --- Icon Components ---

      const SearchIcon = ({ className = "h-6 w-6" }) => React.createElement(
        'svg',
        {
          xmlns: "http://www.w3.org/2000/svg",
          className: className,
          fill: "none",
          viewBox: "0 0 24 24",
          stroke: "currentColor",
          strokeWidth: 2
        },
        React.createElement('path', {
          className: "search-icon-shape",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          d: "M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
        })
      );

      const UserIcon = () => React.createElement(
        'svg',
        {
          xmlns: "http://www.w3.org/2000/svg",
          className: "h-6 w-6",
          fill: "none",
          viewBox: "0 0 24 24",
          stroke: "currentColor",
          strokeWidth: 2
        },
        React.createElement('path', {
          className: "user-head",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          d: "M16 7a4 4 0 11-8 0 4 4 0 018 0z"
        }),
        React.createElement('path', {
          strokeLinecap: "round",
          strokeLinejoin: "round",
          d: "M12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
        })
      );

      const CartIcon = () => React.createElement(
        'svg',
        {
          xmlns: "http://www.w3.org/2000/svg",
          className: "h-6 w-6",
          fill: "none",
          viewBox: "0 0 24 24",
          stroke: "currentColor",
          strokeWidth: 2
        },
        React.createElement('path', {
          className: "cart-body",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          d: "M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17"
        }),
        React.createElement('circle', {
          className: "cart-wheel",
          cx: "8",
          cy: "21",
          r: "2",
          stroke: "currentColor",
          strokeWidth: "1.5",
          fill: "none"
        }),
        React.createElement('circle', {
          className: "cart-wheel",
          cx: "18",
          cy: "21",
          r: "2",
          stroke: "currentColor",
          strokeWidth: "1.5",
          fill: "none"
        })
      );

      const MenuIcon = ({ className }) => React.createElement(
        'svg',
        {
          xmlns: "http://www.w3.org/2000/svg",
          className: `h-6 w-6 ${className || ''}`,
          fill: "none",
          viewBox: "0 0 24 24",
          stroke: "currentColor",
          strokeWidth: 2
        },
        React.createElement('path', { strokeLinecap: "round", strokeLinejoin: "round", d: "M4 6h16M4 12h16M4 18h16" })
      );
      
      const CloseIcon = ({ className }) => React.createElement(
        'svg',
        {
          xmlns: "http://www.w3.org/2000/svg",
          className: `h-6 w-6 ${className || ''}`,
          fill: "none",
          viewBox: "0 0 24 24",
          stroke: "currentColor",
          strokeWidth: 2
        },
        React.createElement('path', { strokeLinecap: "round", strokeLinejoin: "round", d: "M6 18L18 6M6 6l12 12" })
      );

      const TruckIcon = ({ className }) => React.createElement('svg', { xmlns: "http://www.w3.org/2000/svg", className: className, fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", strokeWidth: 2 }, React.createElement('path', { strokeLinecap: "round", strokeLinejoin: "round", d: "M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z" }), React.createElement('path', { strokeLinecap: "round", strokeLinejoin: "round", d: "M13 17H6v-6h11v6H_M17 9h4v8h-4" }), React.createElement('path', { strokeLinecap: "round", strokeLinejoin: "round", d: "M9 5l6 6" }));
      const ShieldIcon = ({ className }) => React.createElement('svg', { xmlns: "http://www.w3.org/2000/svg", className: className, fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", strokeWidth: 2 }, React.createElement('path', { strokeLinecap: "round", strokeLinejoin: "round", d: "M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 20.417l5.5-5.5a12.02 12.02 0 001.5-1.5z" }));
      const SupportIcon = ({ className }) => React.createElement('svg', { xmlns: "http://www.w3.org/2000/svg", className: className, fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", strokeWidth: 2 }, React.createElement('path', { strokeLinecap: "round", strokeLinejoin: "round", d: "M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9 9l-4.243 4.243m1.414-1.414L12 12m0 0l-4.243 4.243m1.414-1.414L12 12m0 0l4.243-4.243m-1.414 1.414L12 12m9.192-9.192a12 12 0 11-16.97 0 12 12 0 0116.97 0z" }));


      // --- StarsCanvas Component ---

      const StarsCanvas = () => {
        const canvasRef = useRef(null);

        useEffect(() => {
          const currentCanvas = canvasRef.current;
          if (!currentCanvas) return;

          const scene = new THREE.Scene();
          const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
          const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });

          renderer.setClearColor(0x000000, 0);
          renderer.setSize(window.innerWidth, window.innerHeight);
          renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
          currentCanvas.appendChild(renderer.domElement);
          
          const starsGeometry = new THREE.BufferGeometry();
          const starsVertices = [];
          for (let i = 0; i < 5000; i++) {
              const x = (Math.random() - 0.5) * 2000;
              const y = (Math.random() - 0.5) * 2000;
              const z = (Math.random() - 0.5) * 2000;
              starsVertices.push(x, y, z);
          }
          starsGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starsVertices, 3));

          const starsMaterial = new THREE.PointsMaterial({
              color: 0x915eff,
              size: 1.5,
              transparent: true,
              opacity: 0.8,
              blending: THREE.AdditiveBlending
          });

          const stars = new THREE.Points(starsGeometry, starsMaterial);
          scene.add(stars);

          camera.position.z = 1;

          let animationFrameId;
          const animate = () => {
              animationFrameId = requestAnimationFrame(animate);
              stars.rotation.x += 0.0002;
              stars.rotation.y += 0.0002;
              renderer.render(scene, camera);
          };
          animate();

          const handleResize = () => {
              camera.aspect = window.innerWidth / window.innerHeight;
              camera.updateProjectionMatrix();
              renderer.setSize(window.innerWidth, window.innerHeight);
          };

          window.addEventListener('resize', handleResize);

          return () => {
              cancelAnimationFrame(animationFrameId);
              window.removeEventListener('resize', handleResize);
              if (currentCanvas && renderer.domElement.parentElement) {
                  currentCanvas.removeChild(renderer.domElement);
              }
          };
        }, []);

        return React.createElement('div', { ref: canvasRef, className: "w-full h-auto fixed inset-0 z-[-1] pointer-events-none" });
      };


      // --- Loader Component ---

      const Loader = ({ isLoading }) => {
        if (!isLoading) return null;

        const brandName = "Optispar";
        const LETTER_ANIMATION_DURATION = 1000;
        const STAGGER_DELAY = 150;
        const HOLD_DURATION = 800;
        
        const letters = brandName.split('');
        const totalAnimationTime = (letters.length * STAGGER_DELAY) + LETTER_ANIMATION_DURATION + HOLD_DURATION;
        const fadeOutDelay = (totalAnimationTime - 500) / 1000;

        return React.createElement(
          'div',
          {
            style: { animation: `fade-out 0.5s ${fadeOutDelay}s forwards` },
            className: "fixed inset-0 z-[9999] flex items-center justify-center bg-[#0a0315] select-none",
            'aria-live': "polite",
            'aria-label': "Lade Optispar"
          },
          React.createElement(
            'div',
            {
              className: "flex",
              style: {
                animationName: 'subtle-glow',
                animationDuration: '2s',
                animationDelay: `${(letters.length * STAGGER_DELAY)}ms`,
                animationIterationCount: 'infinite',
                animationTimingFunction: 'ease-in-out'
              }
            },
            letters.map((letter, index) => React.createElement(
              'h1',
              {
                key: `${letter}-${index}`,
                style: {
                  animationName: 'form-from-stardust',
                  animationDuration: `${LETTER_ANIMATION_DURATION}ms`,
                  animationDelay: `${index * STAGGER_DELAY}ms`,
                  animationFillMode: 'forwards',
                  animationTimingFunction: 'cubic-bezier(0.16, 1, 0.3, 1)'
                },
                className: "text-6xl sm:text-7xl md:text-8xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-purple-400 via-pink-500 to-orange-500 opacity-0"
              },
              letter
            ))
          )
        );
      };


      // --- ImageWithText Component ---

      const HeroVariant = ({ isLoading }) => {
          const TYPE_SPEED = 120;
          const DELETE_SPEED = 70;
          const DELAY = 2000;
          const subtitles = ["Trendige Gadgets", "Smarte Lösungen", "Innovative Technik"];
          
          const [text, setText] = useState('');
          const [subtitleIndex, setSubtitleIndex] = useState(0);
          const [isDeleting, setIsDeleting] = useState(false);
          const [canStartTyping, setCanStartTyping] = useState(false);

          useEffect(() => {
            if (!isLoading) {
              const timer = setTimeout(() => setCanStartTyping(true), 800);
              return () => clearTimeout(timer);
            }
          }, [isLoading]);

          useEffect(() => {
            if (!canStartTyping) return;
            const handleTyping = () => {
                const currentSubtitle = subtitles[subtitleIndex];
                if (isDeleting) {
                    if (text.length > 0) {
                        setText(currentSubtitle.substring(0, text.length - 1));
                    } else {
                        setIsDeleting(false);
                        setSubtitleIndex((prev) => (prev + 1) % subtitles.length);
                    }
                } else {
                    if (text.length < currentSubtitle.length) {
                        setText(currentSubtitle.substring(0, text.length + 1));
                    } else {
                        setTimeout(() => setIsDeleting(true), DELAY);
                    }
                }
            };
            const typingSpeed = isDeleting ? DELETE_SPEED : TYPE_SPEED;
            const timer = setTimeout(handleTyping, typingSpeed);
            return () => clearTimeout(timer);
          }, [text, isDeleting, subtitleIndex, canStartTyping]);

          const animationProps = (delay) => (!isLoading) ? {
            style: {
              opacity: 0,
              animation: `fade-in-up-scale 0.6s cubic-bezier(0.23, 1, 0.32, 1) forwards`,
              animationDelay: delay,
            }
          } : { style: { opacity: 0 }};

          const brandAnimationProps = () => !isLoading ? {
            style: {
              opacity: 0,
              animation: `settle-in-place 1.2s cubic-bezier(0.23, 1, 0.32, 1) forwards`,
              animationDelay: '0.2s',
            }
          } : { style: { opacity: 0 }};

          return React.createElement('section', { className: "relative bg-[#0a0315] text-white overflow-hidden -mt-20" },
            React.createElement(StarsCanvas),
            React.createElement('div', { className: "relative z-20 min-h-screen flex flex-col items-center justify-center text-center px-4 sm:px-6 lg:px-8 pt-20" },
              React.createElement('h1', { className: "text-4xl sm:text-5xl md:text-6xl font-bold tracking-tight text-gray-200", ...animationProps('0s') }, "Willkommen bei"),
              React.createElement('h2', { className: "text-6xl sm:text-7xl md:text-8xl font-extrabold my-3 bg-clip-text text-transparent bg-gradient-to-r from-fuchsia-500 via-purple-600 to-pink-500 [text-shadow:0_0_25px_rgba(228,95,188,0.6)]", ...brandAnimationProps() }, "Optispar"),
              React.createElement('div', { className: "h-10", ...animationProps('0.5s') },
                React.createElement('p', { className: "text-2xl sm:text-3xl font-light text-gray-300" },
                  React.createElement('span', null, text),
                  React.createElement('span', { className: "cursor-blink font-light" }, "|")
                )
              ),
              React.createElement('p', { className: "mt-6 max-w-2xl text-lg text-gray-400 leading-relaxed", ...animationProps('0.7s') }, "Ihr zuverlässiger Partner für sorgfältig ausgewählte Produkte, die Ihren Alltag erleichtern und bereichern."),
              React.createElement('div', { className: "mt-8 flex justify-center", ...animationProps('0.9s') },
                React.createElement('a', { href: "#", className: "inline-block bg-gradient-to-r from-purple-600 via-pink-600 to-orange-500 bg-[length:200%_auto] text-white font-semibold py-3 px-10 rounded-full shadow-lg transform transition-all duration-500 ease-in-out hover:scale-105 hover:bg-right hover:shadow-2xl hover:shadow-purple-500/50 hover:brightness-110" }, "Jetzt Einkaufen")
              )
            )
          );
      }

      const DefaultVariant = () => {
          return React.createElement('section', { className: "bg-white" },
            React.createElement('div', { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24" },
              React.createElement('div', { className: "grid grid-cols-1 md:grid-cols-2 gap-12 md:gap-16 items-center" },
                React.createElement('div', { className: "w-full h-auto bg-gray-100 rounded-lg flex items-center justify-center aspect-square" },
                  React.createElement('img', { src: "https://picsum.photos/800/800?random=1", alt: "Produktbild", className: "w-full h-full object-cover rounded-lg" })
                ),
                React.createElement('div', { className: "flex flex-col justify-center" },
                  React.createElement('h1', { className: "text-4xl md:text-5xl font-bold text-gray-900 leading-tight mb-6" }, "Qualität im Fokus"),
                  React.createElement('p', { className: "text-base md:text-lg text-gray-600 mb-8 leading-relaxed" }, "Entdecken Sie unser Vorzeigeprodukt, das Design und Funktionalität vereint. Perfekt für den modernen Lebensstil, bietet es eine unübertroffene Benutzererfahrung und Langlebigkeit."),
                  React.createElement('div', { className: "mt-2" },
                    React.createElement('a', { href: "#", className: "inline-block bg-gray-700 text-white font-semibold py-3 px-8 rounded-md hover:bg-gray-800 transition-colors duration-300" }, "Mehr erfahren")
                  )
                )
              )
            )
          );
      };

      const ImageWithText = ({ variant = 'default', isLoading = false }) => {
        if (variant === 'hero') {
          return React.createElement(HeroVariant, { isLoading });
        }
        return React.createElement(DefaultVariant);
      };

      // --- Features Section Component ---
      const FeaturesSection = () => {
        const features = [
          {
            Icon: TruckIcon,
            title: "Schneller Versand",
            description: "Erhalten Sie Ihre Bestellung in Rekordzeit direkt an Ihre Haustür geliefert."
          },
          {
            Icon: ShieldIcon,
            title: "Sicherer Einkauf",
            description: "Ihre Daten sind bei uns sicher. Wir verwenden modernste Verschlüsselungstechnologien."
          },
          {
            Icon: SupportIcon,
            title: "24/7 Support",
            description: "Unser Kundenservice-Team ist rund um die Uhr für Sie da, um alle Fragen zu beantworten."
          }
        ];

        return React.createElement('section', { className: "bg-gray-50 py-16 sm:py-24" },
          React.createElement('div', { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" },
            React.createElement('div', { className: "text-center" },
              React.createElement('h2', { className: "text-base font-semibold text-purple-600 tracking-wide uppercase" }, "Unser Versprechen"),
              React.createElement('p', { className: "mt-2 text-3xl font-extrabold text-gray-900 tracking-tight sm:text-4xl" }, "Alles, was Sie brauchen"),
            ),
            React.createElement('div', { className: "mt-12" },
              React.createElement('div', { className: "grid grid-cols-1 gap-10 sm:grid-cols-2 lg:grid-cols-3" },
                features.map(feature => React.createElement('div', { key: feature.title, className: "text-center" },
                  React.createElement('div', { className: "flex items-center justify-center h-12 w-12 rounded-md bg-purple-500 text-white mx-auto" },
                    React.createElement(feature.Icon, { className: "h-6 w-6" })
                  ),
                  React.createElement('h3', { className: "mt-5 text-lg leading-6 font-medium text-gray-900" }, feature.title),
                  React.createElement('p', { className: "mt-2 text-base text-gray-500" }, feature.description)
                ))
              )
            )
          )
        );
      };

      // --- Header Component ---

      const Header = () => {
        const navItems = ['Home', 'Kategorie', 'Produkte', 'Bestellungen', 'AGB'];
        const lerp = (start, end, t) => start * (1 - t) + end * t;
        const easeOutCubic = (t) => 1 - Math.pow(1 - t, 3);

        const [activeItem, setActiveItem] = useState('Home');
        const [scrollProgress, setScrollProgress] = useState(0);
        const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
        const [isSearchOpen, setIsSearchOpen] = useState(false);
        const searchInputRef = useRef(null);

        useEffect(() => {
          const animationDistance = 80;
          let animationFrameId = null;
          const handleScroll = () => {
            if (animationFrameId) cancelAnimationFrame(animationFrameId);
            animationFrameId = requestAnimationFrame(() => {
              const scrollY = window.scrollY;
              const progress = Math.min(scrollY / animationDistance, 1);
              setScrollProgress(progress);
            });
          };
          window.addEventListener('scroll', handleScroll, { passive: true });
          handleScroll();
          return () => {
            if (animationFrameId) cancelAnimationFrame(animationFrameId);
            window.removeEventListener('scroll', handleScroll);
          };
        }, []);

        useEffect(() => {
          if (isMobileMenuOpen || isSearchOpen) {
            document.body.style.overflow = 'hidden';
          } else {
            document.body.style.overflow = 'auto';
          }
          return () => { document.body.style.overflow = 'auto'; };
        }, [isMobileMenuOpen, isSearchOpen]);

        useEffect(() => {
          if (isSearchOpen) {
            const timer = setTimeout(() => searchInputRef.current?.focus(), 300);
            return () => clearTimeout(timer);
          }
        }, [isSearchOpen]);

        const progress = easeOutCubic(isSearchOpen ? 1 : scrollProgress);
        const placeholderStyle = { height: `${lerp(80, 72, progress)}px` };
        const headerStyle = { transform: `translateY(${lerp(0, 8, progress)}px)`, paddingLeft: '1rem', paddingRight: '1rem' };
        const containerStyle = {
            height: `${lerp(80, 56, progress)}px`,
            backgroundColor: `rgba(${lerp(10, 59, progress)}, ${lerp(3, 19, progress)}, ${lerp(21, 112, progress)}, ${lerp(0.5, 0.8, progress)})`,
            backdropFilter: `blur(${lerp(0, 16, progress)}px)`,
            WebkitBackdropFilter: `blur(${lerp(0, 16, progress)}px)`,
            borderRadius: `${lerp(0, 9999, progress)}px`,
            borderWidth: '1px',
            borderColor: `rgba(255, 255, 255, ${lerp(0, 0.1, progress)})`,
            boxShadow: `0 10px 15px -3px rgba(0, 0, 0, ${lerp(0, 0.1, progress)}), 0 4px 6px -4px rgba(0, 0, 0, ${lerp(0, 0.1, progress)})`,
        };
        const iconColorClasses = 'text-gray-300 hover:text-white';

        const handleSearchClick = () => {
          setIsSearchOpen(true);
          if (isMobileMenuOpen) setIsMobileMenuOpen(false);
        };

        const standardHeaderContent = React.createElement('div', { className: `flex items-center justify-between w-full transition-opacity duration-300 ${isSearchOpen ? 'opacity-0 pointer-events-none' : 'opacity-100'}` },
          React.createElement('div', { className: "flex-1 flex justify-start items-center" },
            React.createElement('button', { onClick: () => setIsMobileMenuOpen(true), className: 'md:hidden p-1.5 -ml-1.5 transition-all duration-300 transform hover:scale-110 text-gray-300 hover:text-white', 'aria-label': "Menü öffnen" }, React.createElement(MenuIcon)),
            React.createElement('div', { className: "hidden md:block flex-shrink-0" }, React.createElement('a', { href: "#", className: 'text-2xl font-semibold transition-colors duration-300 text-white' }, "Optispar"))
          ),
          React.createElement('div', { className: "flex-shrink-0 md:flex-1 md:flex md:justify-center" },
            React.createElement('div', { className: "md:hidden" }, React.createElement('a', { href: "#", className: 'text-2xl font-semibold transition-colors duration-300 text-white' }, "Optispar")),
            React.createElement('nav', { className: "hidden md:flex items-center justify-center h-full space-x-2" },
              navItems.map(item => React.createElement('a', { key: item, href: "#", onClick: () => setActiveItem(item), className: `px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 transform hover:scale-105 ${activeItem === item ? 'bg-white/20 text-white' : 'text-gray-300 hover:text-white'}` }, item))
            )
          ),
          React.createElement('div', { className: "flex-1 flex justify-end items-center" },
            React.createElement('div', { className: "flex items-center space-x-1 md:space-x-6" },
              React.createElement('button', { onClick: handleSearchClick, className: `group p-1.5 md:p-0 ${iconColorClasses} transition-all duration-300 hover:scale-110`, 'aria-label': "Suchen" }, React.createElement(SearchIcon)),
              React.createElement('button', { className: `group p-1.5 md:p-0 ${iconColorClasses} transition-all duration-300 hover:scale-110`, 'aria-label': "Konto" }, React.createElement(UserIcon)),
              React.createElement('button', { className: `group p-1.5 md:p-0 ${iconColorClasses} transition-all duration-300 hover:scale-110`, 'aria-label': "Einkaufswagen" }, React.createElement(CartIcon))
            )
          )
        );

        const searchBarContent = React.createElement('div', { className: `absolute inset-0 flex items-center w-full transition-opacity duration-300 ${isSearchOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'}` },
          React.createElement('form', { className: "relative w-full", onSubmit: (e) => e.preventDefault() },
            React.createElement('input', { ref: searchInputRef, type: "text", placeholder: "Suchen...", className: "w-full h-12 pl-12 pr-12 text-base bg-transparent focus:outline-none text-white placeholder-gray-400", autoComplete: "off" }),
            React.createElement('div', { className: "absolute inset-y-0 left-0 flex items-center pl-4 pointer-events-none" }, React.createElement(SearchIcon, { className: "h-5 w-5 text-gray-400" })),
            React.createElement('button', { type: "button", 'aria-label': "Suche schließen", onClick: () => setIsSearchOpen(false), className: "absolute inset-y-0 right-0 flex items-center pr-4 text-gray-400 hover:text-white transition-all transform hover:scale-125 hover:rotate-90" }, React.createElement(CloseIcon, { className: "h-6 w-6" }))
          )
        );
        
        const mobileMenu = React.createElement('div', { className: `fixed inset-2 z-50 rounded-3xl bg-[rgba(38,15,71,0.9)] backdrop-blur-2xl shadow-2xl flex flex-col p-4 md:hidden transition-all duration-300 ease-in-out ${isMobileMenuOpen ? 'opacity-100 scale-100' : 'opacity-0 scale-95 pointer-events-none'}` },
          React.createElement('div', { className: "flex items-center justify-between flex-shrink-0 px-2 h-[56px]" },
            React.createElement('button', { onClick: () => setIsMobileMenuOpen(false), className: "p-2 -m-2 text-gray-300 hover:text-white transition-transform duration-300 transform hover:scale-110 hover:rotate-90", 'aria-label': "Menü schließen" }, React.createElement(CloseIcon, { className: "w-7 h-7" })),
            React.createElement('a', { href: "#", className: "text-2xl font-semibold text-white" }, "Optispar"),
            React.createElement('div', { className: "flex items-center space-x-1" },
              React.createElement('button', { onClick: handleSearchClick, className: "p-2 text-gray-300 hover:text-white transition-transform duration-300 transform hover:scale-110", 'aria-label': "Suchen" }, React.createElement(SearchIcon)),
              React.createElement('button', { className: "p-2 text-gray-300 hover:text-white transition-transform duration-300 transform hover:scale-110", 'aria-label': "Konto" }, React.createElement(UserIcon)),
              React.createElement('button', { className: "p-2 text-gray-300 hover:text-white transition-transform duration-300 transform hover:scale-110", 'aria-label': "Einkaufswagen" }, React.createElement(CartIcon))
            )
          ),
          React.createElement('nav', { className: "flex flex-col items-center flex-grow pt-8" },
            React.createElement('div', { className: "w-full max-w-sm space-y-2" },
              navItems.map(item => React.createElement('a', { key: item, href: "#", onClick: () => { setActiveItem(item); setIsMobileMenuOpen(false); }, className: `w-full block text-center p-4 rounded-xl text-xl font-medium transition-all duration-200 transform hover:scale-105 ${activeItem === item ? 'bg-[rgba(128,90,213,0.5)] text-white' : 'text-gray-300 hover:bg-white/10 hover:text-white'}` }, item))
            )
          )
        );

        return React.createElement(React.Fragment, null,
          React.createElement('div', { style: placeholderStyle }),
          React.createElement('header', { style: headerStyle, className: 'fixed top-0 left-0 right-0 z-40 flex justify-center transition-transform duration-200 ease-out' },
            React.createElement('div', { style: containerStyle, className: 'relative flex items-center justify-between w-full max-w-7xl px-4 sm:px-6 lg:px-8 overflow-hidden transition-all duration-300 ease-in-out' },
              standardHeaderContent,
              searchBarContent
            )
          ),
          mobileMenu
        );
      };

      // --- Footer Component ---
      const Footer = () => {
        return React.createElement('footer', { className: "bg-[#0f071f] text-gray-400" },
          React.createElement('div', { className: "max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8" },
            React.createElement('div', { className: "text-center" },
              React.createElement('a', { href: "#", className: 'text-3xl font-bold transition-colors duration-300 text-white' }, "Optispar"),
              React.createElement('nav', { className: "mt-8 flex justify-center flex-wrap gap-x-6 gap-y-2", 'aria-label': "Footer" },
                React.createElement('a', { href: "#", className: "text-base text-gray-400 hover:text-white transition-colors" }, "Home"),
                React.createElement('a', { href: "#", className: "text-base text-gray-400 hover:text-white transition-colors" }, "Produkte"),
                React.createElement('a', { href: "#", className: "text-base text-gray-400 hover:text-white transition-colors" }, "Über uns"),
                React.createElement('a', { href: "#", className: "text-base text-gray-400 hover:text-white transition-colors" }, "Kontakt"),
                React.createElement('a', { href: "#", className: "text-base text-gray-400 hover:text-white transition-colors" }, "AGB")
              )
            ),
            React.createElement('p', { className: "mt-8 text-center text-base text-gray-500" }, "© ", new Date().getFullYear(), " Optispar. Alle Rechte vorbehalten.")
          )
        );
      };
      

      // --- App Component ---

      const App = () => {
        const [isLoading, setIsLoading] = useState(true);

        useEffect(() => {
          const timer = setTimeout(() => {
            setIsLoading(false);
          }, 3000);
          return () => clearTimeout(timer);
        }, []);

        return React.createElement(
          'div',
          { className: "bg-[#0a0315] text-gray-800 font-sans" },
          React.createElement(Loader, { isLoading }),
          React.createElement(
            'div',
            { style: { opacity: isLoading ? 0 : 1, transition: 'opacity 0.5s ease-in' } },
            React.createElement(Header),
            React.createElement(
              'main',
              null,
              React.createElement(ImageWithText, { variant: "hero", isLoading }),
              React.createElement(ImageWithText),
              React.createElement(FeaturesSection)
            ),
            React.createElement(Footer)
          )
        );
      };


      // --- Entry Point ---
      
      const rootElement = document.getElementById('root');
      if (!rootElement) {
        throw new Error("Konnte das Root-Element nicht finden, um die Anwendung zu mounten");
      }

      const root = ReactDOM.createRoot(rootElement);
      root.render(
        React.createElement(React.StrictMode, null, React.createElement(App))
      );
    </script>
  </body>
</html>